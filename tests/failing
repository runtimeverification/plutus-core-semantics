#
# Simple tests
#
# Uplc does not compute error. The semantics specifies a black diamond
# state which appears should be understood as the error behavior in
# uplc
# Delay uses a free-variable therefore it fails.
tests/textual/simple/delay.uplc
# Force uses a free-varaible therefore it fails.
tests/textual/simple/force.uplc
# Var uses a free-varaible therefore it fails.
tests/textual/simple/var.uplc
# Programs addInteger-one-arg.uplc and addInteger-no-arg.uplc call
# addInteger with a single argument or none. In the current semantics,
# kplc returns an error. However, they are valid programs as
# that should return a term. This of course should be repetead for the
# remaining builtins and will not be included until we solve this.
tests/textual/simple/addInteger-one-arg.uplc
tests/textual/simple/addInteger-no-args.uplc
# `uplc` allows `True` and `False` as variables.
tests/textual/simple/true-var.uplc
tests/textual/simple/false-var.uplc
#
# UPLC examples 
#
# DivideByZero and DivideByZeroDrop both evaluate to ( error ).
# This test has been copied to tests/textual/error. We may want to remove these tests from
# tests/textual/uplc-examples in the future.
tests/textual/uplc-examples/DivideByZero.uplc
tests/textual/uplc-examples/DivideByZeroDrop.uplc
#
# Benchamark validation examples
#
#
# Nofib-exe examples
#
tests/textual/nofib-exe-examples/clausify-F7.uplc
tests/textual/nofib-exe-examples/knights-500-500.uplc
tests/textual/nofib-exe-examples/lastpiece.uplc
tests/textual/nofib-exe-examples/prime-P200.uplc
tests/textual/nofib-exe-examples/queens-6-bt.uplc
#
# Error examples
#
