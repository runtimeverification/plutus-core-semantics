name: 'Test PR'
on:
  pull_request:
    branches:
      - 'master'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test-pr:
    name: 'Bulid and test KPlutus'
    runs-on: [self-hosted, linux, normal]
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          tag: kplutus-ci-${{ github.sha }}
          distro: jammy
      - name: 'Build'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make build -j4'
      - name: 'Build kplutus-pyk'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make kplutus-pyk'
      - name: 'Test simple'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make test-simple -j`nproc` --output-sync=recurse'
      - name: 'Test proofs'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'export KORE_EXEC_OPTS="--log-level error" && make test-prove -j`nproc` --output-sync=recurse'
      - name: 'Test uplc-examples'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make test-uplc-examples -j`nproc` --output-sync=recurse'
      - name: 'Test benchmark-validation-examples'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make test-benchmark-validation-examples -j`nproc` --output-sync=recurse'
      - name: 'Test nofib-exec-examples'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make test-nofib-exe-examples -j`nproc` --output-sync=recurse'
      - name: 'Test flat'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make test-flat -j`nproc` --output-sync=recurse'
      - name: 'Test new-syntax'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make test-new-syntax -j`nproc` --output-sync=recurse'
      - name: 'Test error'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'make test-error -j`nproc` --output-sync=recurse'
      - name: 'Test interactive'
        run: docker exec -t kplutus-ci-${GITHUB_SHA} /bin/bash -c 'export PATH=$(pwd)/.build/usr/bin:$PATH && kplc --help && kplc --version'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 kplutus-ci-${GITHUB_SHA}

  nix:
    name: 'Nix'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # Check out pull request HEAD instead of merge commit.
          ref: ${{ github.event.pull_request.head.sha }}
      - name: 'Install Nix/Cachix'
        uses: cachix/install-nix-action@v15
        with:
          install_url: https://releases.nixos.org/nix/nix-2.7.0/install
          extra_nix_config: |
            substituters = http://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
      - uses: cachix/cachix-action@v10
        with:
          name: kframework-k
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: 'Build KPlutus'
        run: GC_DONT_GC=1 nix build .#kplutus
